#!/usr/bin/env bash
# Назначение: синхронизация IDE/артефактов: проверка наличия .github/context/*
# и журналирование простых метаданных. Можно расширить интеграцией в MCP memory.
set -euo pipefail

ROOT="/home/projects/new-flowise"
CTX_DIR="$ROOT/.github/context"

echo "[update-ide] verifying context artifacts..."
missing=()
for f in db-schema.json migrations.json entities.json dynamic-conditions.json sessions.json attempts-registry.json; do
  [[ -f "$CTX_DIR/$f" ]] || missing+=("$f")
done
if (( ${#missing[@]} > 0 )); then
  echo "[update-ide] missing: ${missing[*]}" >&2
else
  echo "[update-ide] all required artifacts present"
fi

# Простейший штамп времени
echo "[update-ide] timestamp: $(date -Iseconds)" > "$CTX_DIR/.last-update-ide.txt"

# Миграция: переименование старых файлов сессий в новый формат #<seq>--<HH:MM>-<dd.MM.yyyy>.md
SESS_DIR="$ROOT/.github/sessions"
if [[ -d "$SESS_DIR" ]]; then
  while IFS= read -r -d '' f; do
    base=$(basename "$f")
    if [[ "$base" =~ ^#([0-9]{3})([0-9]{2})-([0-9]{2})-([0-9]{2})-([0-9]{2})-([0-9]{4})\.md$ ]]; then
      seq=${BASH_REMATCH[1]}
      hh=${BASH_REMATCH[2]}; mm=${BASH_REMATCH[3]}; dd=${BASH_REMATCH[4]}; mon=${BASH_REMATCH[5]}; yyyy=${BASH_REMATCH[6]}
      # Уберём лидирующие нули у номера: 001 -> 1
      seq_num=$((10#$seq))
      new="#${seq_num}--${hh}:${mm}-${dd}.${mon}.${yyyy}.md"
      mv -f "$f" "$SESS_DIR/$new" || true
      echo "[update-ide] renamed legacy session: $base -> $new"
    fi
  done < <(find "$SESS_DIR" -maxdepth 1 -type f -name "#*.md" -print0)
fi
echo "[update-ide] done"

# Лёгкая синхронизация KB-хэшей (для трассировки):
DATA_DIR="$ROOT/.github/mcp/data"
if [[ -d "$DATA_DIR" ]]; then
  mem_file="$DATA_DIR/memory.jsonl"
  kg_file="$DATA_DIR/knowledge-graph.jsonl"
  ctx7_file="$DATA_DIR/context7.jsonl"
  ts=$(date -Iseconds)
  mem_hash=$(command -v sha256sum >/dev/null 2>&1 && { sha256sum "$mem_file" 2>/dev/null | awk '{print $1}'; } || echo "")
  kg_hash=$(command -v sha256sum >/dev/null 2>&1 && { sha256sum "$kg_file" 2>/dev/null | awk '{print $1}'; } || echo "")
  if [[ -n "$mem_hash" || -n "$kg_hash" ]]; then
    line=$(printf '{"type":"kb-sync","ts":"%s","memoryHash":"%s","kgHash":"%s"}\n' "$ts" "${mem_hash:-}" "${kg_hash:-}")
    printf '%s' "$line" >> "$ctx7_file" || true
    echo "[update-ide] kb-sync recorded"
  fi
fi
